# **The Complete Expert's Guide to NFS: Installation, Configuration & Management**

## **Table of Contents**
1. [Introduction to NFS](#1-introduction-to-nfs)
2. [System Requirements](#2-system-requirements)
3. [Installation](#3-installation)
   - [Server Installation](#server-installation)
   - [Client Installation](#client-installation)
4. [Server Configuration](#4-server-configuration)
   - [Creating Shared Directories](#creating-shared-directories)
   - [Configuring Exports](#configuring-exports)
   - [Advanced Export Options](#advanced-export-options)
5. [Client Configuration](#5-client-configuration)
   - [Manual Mounting](#manual-mounting)
   - [Testing Connectivity](#testing-connectivity)
6. [Access Control & Security](#6-access-control--security)
   - [IP-Based Restrictions](#ip-based-restrictions)
   - [User Permissions](#user-permissions)
   - [Firewall Configuration](#firewall-configuration)
7. [Automounting](#7-automounting)
   - [Using fstab](#using-fstab)
   - [Autofs Configuration](#autofs-configuration)
8. [Performance Tuning](#8-performance-tuning)
9. [Troubleshooting](#9-troubleshooting)
10. [Best Practices](#10-best-practices)

---

## **1. Introduction to NFS**
The Network File System (NFS) is a distributed file system protocol that allows sharing directories and files across a network. Developed by Sun Microsystems in 1984, it enables seamless file access as if they were stored locally.

### **Key Features:**
- **Cross-Platform Sharing**: Works across UNIX/Linux systems.
- **Transparency**: Files appear as local to users.
- **Scalability**: Supports large networks with multiple clients.
- **Performance**: Optimized for high-speed networks.

### **NFS Versions:**
| Version | Year | Key Improvements |
|---------|------|------------------|
| NFSv2   | 1989 | Basic file sharing |
| NFSv3   | 1995 | Larger files, async writes |
| NFSv4   | 2000 | Stateful protocol, security |
| NFSv4.1 | 2010 | Parallel NFS (pNFS) |
| NFSv4.2 | 2016 | Server-side copy, sparse files |

---

## **2. System Requirements**
### **Server Requirements:**
- Linux OS (Ubuntu, CentOS, RHEL)
- `nfs-kernel-server` (Debian) or `nfs-utils` (RHEL)
- Minimum 2GB RAM (for heavy workloads)
- Static IP address

### **Client Requirements:**
- `nfs-common` (Debian) or `nfs-utils` (RHEL)
- Network connectivity to server

---

## **3. Installation**
### **Server Installation**
#### **Ubuntu/Debian:**
```bash
sudo apt update
sudo apt install nfs-kernel-server rpcbind -y
sudo systemctl enable --now nfs-server rpcbind
```

#### **RHEL/CentOS:**
```bash
sudo yum install nfs-utils rpcbind -y
sudo systemctl enable --now nfs-server rpcbind
```

### **Client Installation**
#### **Ubuntu/Debian:**
```bash
sudo apt install nfs-common -y
```

#### **RHEL/CentOS:**
```bash
sudo yum install nfs-utils -y
```

---

## **4. Server Configuration**
### **Creating Shared Directories**
```bash
sudo mkdir -p /srv/nfs/share1
sudo chown nobody:nogroup /srv/nfs/share1
sudo chmod 777 /srv/nfs/share1  # Temporary for testing
```

### **Configuring Exports**
Edit `/etc/exports`:
```bash
/srv/nfs/share1 192.168.1.0/24(rw,sync,no_subtree_check)
```

Apply changes:
```bash
sudo exportfs -arv
sudo systemctl restart nfs-server
```

### **Advanced Export Options**
| Option | Description |
|--------|-------------|
| `rw` | Read-write access |
| `ro` | Read-only access |
| `sync` | Commit changes synchronously |
| `async` | Commit changes asynchronously (faster but risky) |
| `no_root_squash` | Allow root access from client |
| `all_squash` | Map all users to anonymous |

---

## **5. Client Configuration**
### **Manual Mounting**
```bash
sudo mkdir -p /mnt/nfs/share1
sudo mount -t nfs 192.168.1.100:/srv/nfs/share1 /mnt/nfs/share1
```

### **Testing Connectivity**
```bash
showmount -e 192.168.1.100
df -h | grep nfs
```

---

## **6. Access Control & Security**
### **IP-Based Restrictions**
```bash
/srv/nfs/share1 192.168.1.50(rw) 192.168.1.51(ro)
```

### **User Permissions**
```bash
sudo chmod 750 /srv/nfs/share1
sudo chown user1:group1 /srv/nfs/share1
```

### **Firewall Configuration**
#### **UFW (Ubuntu):**
```bash
sudo ufw allow from 192.168.1.0/24 to any port nfs
```

#### **Firewalld (RHEL):**
```bash
sudo firewall-cmd --add-service=nfs --permanent
sudo firewall-cmd --reload
```

---

## **7. Automounting**
### **Using fstab**
```bash
192.168.1.100:/srv/nfs/share1  /mnt/nfs/share1  nfs  defaults,_netdev  0  0
```

### **Autofs Configuration**
Install autofs:
```bash
sudo apt install autofs
```

Edit `/etc/auto.master`:
```bash
/mnt/nfs  /etc/auto.nfs
```

Create `/etc/auto.nfs`:
```bash
share1  -fstype=nfs  192.168.1.100:/srv/nfs/share1
```

Restart autofs:
```bash
sudo systemctl restart autofs
```

---

## **8. Performance Tuning**
- Use `async` for better performance (if data consistency isn't critical)
- Increase NFS threads:
  ```bash
  echo "options nfs nfs4_disable_idmapping=0" >> /etc/modprobe.d/nfs.conf
  ```
- Enable Jumbo Frames (MTU 9000) on high-speed networks

---

## **9. Troubleshooting**
### **Common Issues & Solutions**
| Issue | Solution |
|-------|----------|
| "Access denied" | Check `/etc/exports` permissions |
| Mount hangs | Verify firewall settings |
| Slow performance | Check network latency, use `async` |
| Stale file handles | Unmount and remount |

### **Log Checking**
```bash
# Ubuntu
tail -f /var/log/syslog

# RHEL
journalctl -u nfs-server
```

---

## **10. Best Practices**
1. **Security**:
   - Use Kerberos with NFSv4
   - Restrict exports to specific IPs
   - Avoid `no_root_squash` in production

2. **Performance**:
   - Use TCP instead of UDP
   - Tune NFS server threads

3. **Reliability**:
   - Use `sync` for critical data
   - Implement monitoring

4. **Backup**:
   - Regular backups of critical shares
   - Use snapshots for large volumes

---

## **Final Notes**
This guide covers everything from basic setup to advanced configuration. For enterprise environments, consider:
- Implementing LDAP/Kerberos authentication
- Setting up NFS high availability
- Using dedicated storage networks (VLANs)

**Need more details on any section?** Let me know how I can expand further!
