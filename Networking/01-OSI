# OSI - OPEN SYSTEMS INTERCONNECTION MODEL  
*Please Do Not Throw Sausage Pizza Away*  
TOP DOWN APPROACH

+-----------------+
| APPLICATION   T |  # PROVIDES NETWORK ACCESS TO APPS: DHCP, FTP, HTTP, DNS, POP3, SMTP
+-----------------+
| PRESENTATION  T |  # FORMATS DATA, ENCRYPTS/DECRYPTS, COMPRESSION: SSL, SSH, TLS
+-----------------+
| SESSION       T |  # MAINTAINS SESSIONS: NetBIOS, RPC, SMB, SOCKETS
+-----------------+
| TRANSPORT     B |  # CONTROLS HOW DATA TRAVELS: TCP (RELIABLE), UDP (FASTER, UNRELIABLE)
+-----------------+
| NETWORK       B |  # ROUTING & LOGICAL ADDRESSING: IP, ICMP, NAT, OSPF
+-----------------+
| DATALINK      B |  # FLOW CONTROL, ERROR DETECTION, **MTU**, MAC ADDRESSES, FRAMES
|                 |  # Protocols: Ethernet, LLC, MPLS, PPP, STP
+-----------------+
| PHYSICAL      B |  # SENDS RAW BITS OVER MEDIA: COPPER, FIBER, WIRELESS, VOLTAGE LEVELS
+-----------------+

# TCP / IP MODEL

+-------------------+
| APPLICATION       |  # INCLUDES OSI LAYERS 5, 6, 7  
|                   |  # Examples: HTTP, FTP, SMTP, DNS, RIP  
|                   |  # Also handles formatting, encryption, compression
+-------------------+
| TRANSPORT         |  # TCP, UDP — handles reliable/unreliable communication
+-------------------+
| INTERNET          |  # IP ADDRESSING, ROUTING: IP, ICMP, ARP, NAT
+-------------------+
| NETWORK INTERFACE |  # PHYSICAL + DATA LINK: Ethernet, Wi-Fi (802.11), DSL, Fiber, Copper
+-------------------+

### Mapping OSI to TCP/IP:

| TCP/IP Layer        | OSI Layers Covered               |
|---------------------|----------------------------------|
| Application         | Application + Presentation + Session |
| Transport           | Transport                        |
| Internet            | Network                          |
| Network Interface   | Data Link + Physical             |

# ENCAPSULATION (When sending data)

1. **Application Layer:** creates data  
2. **Transport Layer:** adds TCP/UDP header → becomes *segment*  
3. **Network Layer:** adds IP header → becomes *packet*  
4. **Data Link Layer:** adds MAC header + trailer → becomes *frame*  
   - Also applies **MTU limit** here  
5. **Physical Layer:** converts frame into raw bits and transmits
